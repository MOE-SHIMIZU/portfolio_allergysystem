<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.app.mapper.OrderMapper">

	<resultMap id="joinedResult" type="Order" autoMapping="true">
		<id property="id" column="id" />
		<collection property="ingredientIdList" ofType="Detail"
			autoMapping="true">
			<id property="id" column="detail_id" />
			<result property="orderId" column="order_id" />
			<result property="ingredientId" column="ingredient_id" />
		</collection>
	</resultMap>

	<select id="selectAll" resultType="Order">
		SELECT
		orders.id, orders.name,
		orders.kana, orders.price,
		orders.img, orders.note, orders.created,
		IFNULL(
		GROUP_CONCAT(
		DISTINCT CONCAT(
		allergy.name, ' : ',
		(
		SELECT
		GROUP_CONCAT(ingredient.name SEPARATOR ',')
		FROM detail
		JOIN ingredient
		ON detail.ingredient_id = ingredient.id
		JOIN ingredients_allergies ON
		ingredient.id = ingredients_allergies.ingredient_id
		LEFT JOIN food_cat
		ON ingredient.food_cat_id = food_cat.id
		WHERE detail.orders_id =
		orders.id
		AND ingredients_allergies.allergy_id = allergy.id
		)
		) SEPARATOR
		' | ' ), 'No Allergy') AS
		allergy_and_ingredient,
		GROUP_CONCAT(ingredient.name SEPARATOR '\n') AS ingredientName
		FROM
		orders
		JOIN detail ON orders.id = detail.orders_id
		LEFT JOIN ingredient
		ON detail.ingredient_id = ingredient.id
		LEFT JOIN ingredients_allergies
		ON ingredient.id = ingredients_allergies.ingredient_id
		LEFT JOIN
		food_cat ON ingredient.food_cat_id = food_cat.id
		LEFT JOIN allergy ON
		ingredients_allergies.allergy_id = allergy.id
		GROUP BY orders.id,
		orders.name, orders.kana, orders.img, orders.note, orders.created
		ORDER BY orders.id ASC;
	</select>

	<select id="selectById" parameterType="int"
		resultMap="joinedResult">
		SELECT
		orders.id,
		orders.name,
		orders.kana,
		orders.price,
		orders.img,
		orders.note,
		orders.created,
		detail.id AS detail_id,
		detail.orders_id,
		detail.ingredient_id,
		ingredient.name AS ingredient_name,
		IFNULL(allergy.name, 'no allergy') AS allergy_name
		FROM orders
		JOIN
		detail ON orders.id = detail.orders_id
		LEFT JOIN ingredients_allergies
		ON detail.ingredient_id =
		ingredients_allergies.ingredient_id
		LEFT JOIN
		ingredient ON
		detail.ingredient_id = ingredient.id
		LEFT JOIN allergy ON
		ingredients_allergies.allergy_id = allergy.id
		WHERE orders.id = #{id}
		ORDER BY CASE WHEN ingredient.name IS NULL THEN 'A' ELSE 'B' END,
		allergy.id DESC
	</select>

	<delete id="deleteById" parameterType="int">
		DELETE FROM orders
		WHERE id
		= #{id}
	</delete>

	<update id="update" parameterType="Order">
		UPDATE orders
		SET name = #{name},
		kana = #{kana},
		price = #{price}, img = #{img}, note = #{note}
		WHERE id
		= #{id}
	</update>

	<insert id="insert" parameterType="Order"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO orders (name, kana,
		price, img, note)
		VALUES(#{name}, #{kana}, #{price}, #{img}, #{note})
	</insert>

	<select id="selectOrderDetailById" parameterType="int"
		resultType="Order">
		SELECT
		CASE
		WHEN detail.ingredient_id IS NULL THEN NULL
		ELSE ingredient.name
		END AS ingredient_name,
		CASE
		WHEN detail.ingredient_id IS NULL THEN NULL
		ELSE IFNULL(GROUP_CONCAT(allergy.name SEPARATOR ', '), 'no allergy')
		END AS allergies
		FROM orders
		LEFT JOIN detail ON orders.id = detail.orders_id
		LEFT JOIN ingredient ON detail.ingredient_id = ingredient.id
		LEFT JOIN ingredients_allergies ON ingredient.id =
		ingredients_allergies.ingredient_id
		LEFT JOIN allergy ON ingredients_allergies.allergy_id = allergy.id
		WHERE orders.id = #{id}
		GROUP BY detail.id
	</select>
	
	<!-- Null表示 -->
	<select id="selectNull" resultType="Order">
		SELECT
		orders.id,
		orders.name
		FROM orders
		LEFT JOIN detail ON orders.id = detail.orders_id
		WHERE
		detail.ingredient_id IS NULL
	</select>

	<!-- ページネーション -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM orders
	</select>

	<!-- ページネーション -->
	<select id="selectLimited" resultType="Order">
		SELECT
		orders.id, orders.name, orders.kana, orders.price,
		orders.img,
		orders.note, orders.created,
		IFNULL(
		GROUP_CONCAT(
		DISTINCT CONCAT(
		allergy.name, ' : ',
		(
		SELECT
		GROUP_CONCAT(ingredient.name SEPARATOR ',')
		FROM detail
		JOIN ingredient ON detail.ingredient_id = ingredient.id
		JOIN ingredients_allergies ON ingredient.id =
		ingredients_allergies.ingredient_id
		LEFT JOIN food_cat ON
		ingredient.food_cat_id = food_cat.id
		WHERE detail.orders_id = orders.id
		AND ingredients_allergies.allergy_id = allergy.id
		)
		) SEPARATOR
		' | ' ),
		'No Allergy') AS
		allergy_and_ingredient,
		GROUP_CONCAT(ingredient.name
		SEPARATOR '\n') AS ingredientName
		FROM orders
		JOIN detail ON orders.id =
		detail.orders_id
		LEFT JOIN ingredient ON detail.ingredient_id =
		ingredient.id
		LEFT JOIN ingredients_allergies ON ingredient.id =
		ingredients_allergies.ingredient_id
		LEFT JOIN food_cat ON
		ingredient.food_cat_id = food_cat.id
		LEFT JOIN allergy ON
		ingredients_allergies.allergy_id = allergy.id
		GROUP BY orders.id,
		orders.name, orders.kana, orders.img, orders.note, orders.created
		ORDER BY orders.id ASC
		LIMIT #{offset}, #{numPerPage}

	</select>


</mapper>